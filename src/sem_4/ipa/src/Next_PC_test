`timescale 1ns/1ps

module Next_PC_test;
    reg Branch, Zero;
    reg [63:0] PC, Target;
    wire [63:0] next_pc;

    // Instantiate the Next_PC module
    Next_PC next_pc_unit (
        .Branch(Branch),
        .Zero(Zero),
        .PC(PC),
        .Target(Target),
        .next_pc(next_pc)
    );

    initial begin
        $dumpfile("Next_PC_test.vcd");
        $dumpvars(0, Next_PC_test);

        // Test Case 1: No branch (PC + 4)
        PC = 64'd100;
        Target = 64'd200;
        Branch = 0;
        Zero = 0;
        #10;
        $display("PC: %d", PC);
        $display("Target: %d", Target);
        $display("Branch: %b", Branch);
        $display("Zero: %b", Zero);
        $display("Next PC: %d\n", next_pc);

        // Test Case 2: Branch taken (Target Address)
        Branch = 1;
        Zero = 1;
        #10;
        $display("PC: %d", PC);
        $display("Target: %d", Target);
        $display("Branch: %b", Branch);
        $display("Zero: %b", Zero);
        $display("Next PC: %d\n", next_pc);

        // Test Case 3: Branch but Zero = 0 (PC + 4)
        Branch = 1;
        Zero = 0;
        #10;
        $display("PC: %d", PC);
        $display("Target: %d", Target);
        $display("Branch: %b", Branch);
        $display("Zero: %b", Zero);
        $display("Next PC: %d\n", next_pc);

        // Test Case 4: No Branch, Zero set (PC + 4)
        Branch = 0;
        Zero = 1;
        #10;
        $display("PC: %d", PC);
        $display("Target: %d", Target);
        $display("Branch: %b", Branch);
        $display("Zero: %b", Zero);
        $display("Next PC: %d\n", next_pc);

        $finish;
    end
endmodule
